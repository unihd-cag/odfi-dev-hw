<!DOCTYPE HTML>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Package Viewer</title>

<!-- Bootstrap Styles -->
<!-- ################ -->
<link href="bootstrap/css/bootstrap.min.css" rel="stylesheet"
    media="screen" />

<script type="text/javascript" src="http://code.jquery.com/jquery-2.0.3.min.js" ></script>

<!-- Viewer Styles -->
<!-- ############ -->
<style type="text/css">

  

</style>



<script type="text/javascript">

  function clearArea() {
    document.getElementById("rulesArea").value='';
  }

  //Parse the producer class for its name
  function parseProducer(name) {
    var res= name.split("::");
    console.log("parsing producer: " + name);
    console.log("split: " + res);
    return res[res.length - 1];
}

  function addCheckboxes(names) {
    var frag = document.createDocumentFragment();

    for (var i=1; i<names.length; i++) {
	var name = names[i];
	var choiceSelection = document.createElement('input');
	choiceSelection.setAttribute('type', 'radio');
	choiceSelection.setAttribute('id', 'producerselection');
	choiceSelection.setAttribute('name', 'producer');
	choiceSelection.setAttribute('value', name);
	if (i == 1) {
	  choiceSelection.setAttribute('checked','true');
	}
	
	choiceSelection.setAttribute('onchange','updateViews(\''+name+'\')');

	

	frag.appendChild(choiceSelection);
	var label=document.createTextNode(parseProducer(name));
	frag.appendChild(label);
	var br=document.createElement("br");
	frag.appendChild(br);

    }

    document.getElementById('producers').appendChild(frag);
  }


   function addItem(form,Text,Value)	{
        // Create an Option object
       var opt = document.createElement("option");
        
        // Add an Option object to Drop Down/List Box
        document.getElementById(form).options.add(opt);
        // Assign text and value to Option object
        opt.text = Text;
        opt.value = Value;
               
    }

  function clearMenu(menu) {
    var select = document.getElementById(menu);
    var i;
    for(i=select.options.length-1;i>=0;i--)
    {
        select.remove(i);
    }
  }

  function updateViews(name) {
   $.ajax({
	    url : "/package/data/package/views?producer="+name,
	    dataType: "json",
	    type: 'GET'
	}).done(function(data) {
	    if (data.result == "No Packages available!") {
	      addItem("packageview",data.result, data.result);
	    } else {
	      var views = data.result.split(" ");
	      clearMenu("packageview");
	      for (var i=0; i<views.length; i++) {
		addItem("packageview",views[i],views[i]);
	      }
	  }
	})
  }

  function update() {
    $("#producer-output").text("Loading....")
    var formurl = $("#producer-select").serialize();
    console.log(formurl);
    $("#producer-output").load("/package/data/producer/produce?view=svg&"+formurl)
    updateViews("test");

  }
  

  function save() {
    $("#producer-output").text("Saving Rules....")
    //$("#producer-output").load("/package/data/producer/save?view=svg&"+$("#producer-select textarea").serialize())

    $.ajax({
      url : "/package/data/producer/saveRules?"+$("#producer-select textarea").serialize(),
      type: 'GET'
    })
    $("#producer-output").text("Rules saved!")
  }

  function load() {

      $("#rulesArea").text("Loading Rules....")

      $.ajax({
	    url : "/package/data/package/rules",
	    dataType: "json",
	    type: 'GET'
	}).done(function(data) {
	    console.log("result: " + decodeURIComponent(data.result));
	    $("#rulesArea").val(decodeURIComponent(data.result));
	})
  }

</script>

</head>
<body>

<h1>Package Viewer</h1>
<p>

This small web page will help view available packages and their actual rendering through different output generators

</p>
<p>
<form if = "pack" method="get">
Select Package from directories: 

   <select id = "packageselect" name="package"></select>

   <input type="submit" value="Submit">
</form>

<form if = "directory" method="get">
Add a directory:
<input type="text" name="directory">

</form> 

</p>
<script type="text/javascript">
//fill dropdown menu with the available Packages
  function getData() {
    return $.ajax({
        url : "/package/data/package/available",
	dataType: "json",
        type: 'GET'
    });
  }

  function handleData(data) {

    
    if (data.result == "No Packages available!") {
      addItem("packageselect",data.result, data.result);
    } else {
      var files = data.result.split(" ");
      for (var i=1; i<files.length; i++) {
	addItem("packageselect",files[i],files[i]);
      }
    }
  }

  

  $(function() {
   /* 

*/

    getData().done(handleData);

/*     $.ajax({
	    url : "/package/data/package/producer",
	    dataType: "json",
	    type: 'GET'
	}).done(function(data) {
	    if (data.result == "No Packages available!") {
	      addItem("packageview",data.result, data.result);
	    } else {
	      var files = data.result.split(" ");
	      for (var i=0; i<files.length; i++) {
		addItem("packageview",files[i],files[i]);
	      }
	  }
	})*/

    $.ajax({
	    url : "/package/data/package/availableProducers",
	    dataType: "json",
	    type: 'GET'
	}).done(function(data) {
	   
	  var files = data.result.split(" ");
	  addCheckboxes(files);
	})

    /*
    TODO Get selected checkbox on load
    console.log("looki"); 
    var checkboxes = document.getElementsByName('producerselection');
    console.log("checkboxes: " + checkboxes);
    var i=0;
    while (!checkboxes[i].checked && i<checkboxes.length) {
      i++;
    }
    var name = checkboxes[i];
    console.log("selected checkbox: " + name); 
    $.ajax({
	    url : "/package/data/package/views?producer="+name,
	    dataType: "json",
	    type: 'GET'
	}).done(function(data) {
	    if (data.result == "No Packages available!") {
	      addItem("packageview",data.result, data.result);
	    } else {
	      var files = data.result.split(" ");
	      clearMenu("packageview");
	      for (var i=0; i<files.length; i++) {
		addItem("packageview",files[i],files[i]);
	      }
	  }
	})
*/
  })
</script>


<p>
    <%

      proc urlDecode {url} {

	regsub -all {\+} $url { } url

	regsub -all {%([0-9a-hA-H][0-9a-hA-H])} $url {[format %c 0x\1]} url

	return [subst $url]

      }

      
      ## Get newly selected package
      array set request $requestArray
      if {[regexp {package=(.+)} $request(query) -> package]} {

	#if {[urlDecode $package] != "No Packages available!"} {
		puts "selected package: [urlDecode $package]"
		set filename $package

		##set csvFile [file dirname [file normalize [info script]]]/$filename
 		set csvFile [ urlDecode $filename]

		## Create Foot print 
		set packageobject [::new odfi::dev::hw::package::Footprint $csvFile.#auto]
		$packageobject name [file tail $csvFile]

		## Read
		set f [open $csvFile]
		$packageobject readCSV [read $f]
		close $f

		$application currentPackage $packageobject
        #}
      } 


      ## get a directory that should be added; update availablePackages
      array set request $requestArray
      if {[regexp {directory=(.+)} $request(query) -> directory]} {
		#TODO
		puts "added directory: [urlDecode $directory]"
		set dir [urlDecode $directory]

		##get directory from file:
		#set f [file tail $dir]
		#set lenF [string length $f]
		#set lenD [string length $dir]
		#set end [expr $lenD - $lenF]
		#set dir [string range $dir 0 $end]


		set dirs [$application directories]
		lappend dirs $dir
		$application directories $dir

		set files [$application availablePackages]
		set newFiles [glob -directory $dir *.package.csv]

		lappend files $newFiles
		$application availablePackages $files
		##puts "updated files: [$application availablePackages]"
            }

    %>

    
</p>
<!--
<p>
    Current Package: <span id="current-package"></span>
</p>-->



<!-- Content -->
<!-- ####### -->
<div class="row-fluid">

    <!-- Producer Output -->
    <!-- ############### -->
    <div class="span6">
        <h3>Producer Output</h3>

            <div  id="producer-output"></div>
 
        
    </div>

    <!-- Control part -->
    <!-- ############### -->
    <div class="span6">
        <h3>Controls</h3>

        <div>
            <h4>Producer Control</h4>
            <form id="producer-select">

		<div>
		  <span id="producers"></span>
		<div>

                <!--<input type="radio" name="producer" value="svg" selected="true">SVG Output<br/>
                <input type="radio" name="producer" value="capture">Capture-->
                <div>
                    <div>Rules:</div>
                    <textarea id="rulesArea" name="rulesArea" rows="15" style="width: 100%" name="rules"></textarea>
                </div>
		<div>
		    <select id = "packageview" name="packageview"></select>
		</div>
                <div>
                    <input type="button" value="preview" onclick="update();"></input>
		    <input type="button" value="save" onclick="save();"></input>
		    <input type="button" value="load" onclick="load();"></input>
		    <input type="button" value="reset" onclick="clearArea();"></input>

                </div>

            </form>


            <script>
                // For each possible Producer, add a call to update the producer output div
                //-----------
                /*$("#producer-select input:radio").each(function(i,input) {

                    $(input).change(function(obj){

                        console.log("clicked input element")
                        $("#producer-output").text("Loading....")

                        console.log("Rules: "+$("#producer-select textarea").serialize())

                        //$("#producer-output").load("/package/data/producer/produce?view=svg",{"rules": $("#producer-select textarea").text()})
                        $("#producer-output").load("/package/data/producer/produce?view=svg&"+$("#producer-select textarea").serialize())

                    })
                    

                })*/

            </script
        </div>

        <div>
            <!--<h4>Package Information</h4>


            <%
		  table {

		      set id "package-infos-pins"
		      header {
			  column "Pin Name"
		      }

		      body {

			foreach {location pin} [[$application currentPackage] getPinsArray] {  
			  row [$pin name]
			}

		      }
		  }
            %>-->
        </div>

    </div>

</div>
<!--
<script type="text/javascript">
    
    // Init
    //--------------
    $( function() {



        // Update Selected Package
        //----------------------
        $.ajax({
            url: "/package/data/package/current",
            dataType: "json",
            success: function(data) {

                console.log("Updated current package: "+data)

//test
/*
                $("#producer-output").text("Lade...")
		$("#producer-output").load("/package/data/producer/produce?view=svg&"+$("#producer-select textarea").serialize())
*/

                $("#current-package").text(data.result)
            },
            error: function(xqr,status) {

                console.log("error: "+status)
            }

        })

    } )

</script>
-->

</body>
</html>
